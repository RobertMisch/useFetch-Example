{"ast":null,"code":"import { useEffect, useState } from \"react\"; // import useLocalStorage from \"./useLocalStorage\"\n\nconst useFetch = (url, options) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const FetchData = async () => {\n      try {\n        const res = await fetch(url, options);\n        console.log(\"res\", res);\n        const json = await res.json();\n        console.log(json);\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    FetchData();\n  }, []);\n  return {\n    response,\n    error\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/jwoonk/GIT/sprint-preparation/dark-mode/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","options","response","setResponse","error","setError","FetchData","res","fetch","console","log","json"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAMC,OAAN,CAAvB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AACA,cAAMI,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAJ,EAAnB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAR,QAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,OAND,CAME,OAAOP,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAVD;;AAWAE,IAAAA,SAAS;AACV,GAbQ,EAaN,EAbM,CAAT;AAcA,SAAO;AAAEJ,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,GAAP;AACD,CAnBH;;AAqBE,eAAeL,QAAf","sourcesContent":["import {useEffect, useState} from \"react\"\n// import useLocalStorage from \"./useLocalStorage\"\n\nconst useFetch = (url, options) => {\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      const FetchData = async () => {\n        try {\n          const res = await fetch(url, options);\n          console.log(\"res\", res)\n          const json = await res.json();\n          console.log(json)\n          setResponse(json);\n        } catch (error) {\n          setError(error);\n        }\n      };\n      FetchData();\n    }, []);\n    return { response, error };\n  };\n\n  export default useFetch"]},"metadata":{},"sourceType":"module"}