{"ast":null,"code":"import { useEffect } from \"react\";\nimport useLocalStorage from \"./useLocalStorage\";\n\nconst useFetch = (url, options) => {\n  const [response, setResponse] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    const FetchData = async () => {\n      try {\n        const res = await fetch(url, options);\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    FetchData();\n  }, []);\n  return {\n    response,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/jwoonk/GIT/sprint-preparation/dark-mode/src/hooks/useFetch.js"],"names":["useEffect","useLocalStorage","useFetch","url","options","response","setResponse","React","useState","error","setError","FetchData","res","fetch","json"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,KAAK,CAACC,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,KAAK,CAACC,QAAN,CAAe,IAAf,CAA1B;AAEAD,EAAAA,KAAK,CAACP,SAAN,CAAgB,MAAM;AACpB,UAAMW,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAMC,OAAN,CAAvB;AACA,cAAMU,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAR,QAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,OAJD,CAIE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KARD;;AASAE,IAAAA,SAAS;AACV,GAXD,EAWG,EAXH;AAYA,SAAO;AAAEN,IAAAA,QAAF;AAAYI,IAAAA;AAAZ,GAAP;AACD,CAjBH","sourcesContent":["import {useEffect} from \"react\"\nimport useLocalStorage from \"./useLocalStorage\"\n\nconst useFetch = (url, options) => {\n    const [response, setResponse] = React.useState(null);\n    const [error, setError] = React.useState(null);\n  \n    React.useEffect(() => {\n      const FetchData = async () => {\n        try {\n          const res = await fetch(url, options);\n          const json = await res.json();\n          setResponse(json);\n        } catch (error) {\n          setError(error);\n        }\n      };\n      FetchData();\n    }, []);\n    return { response, error };\n  };"]},"metadata":{},"sourceType":"module"}